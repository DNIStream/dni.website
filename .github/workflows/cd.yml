name: DNI Stream Website CD Build

on:
  push:
    # TODO: Remove the "branches" node for go live
    branches:
      - release/*
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  dockerimages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Log in to docker packages
        run: docker login docker.pkg.github.com --username dnistream --password ${{ secrets.GITHUB_TOKEN }}
      - name: Get image tags
        # refs/tags/2.0.2
        run: |
          git tag --sort=committerdate;
          tag=$(git tag --sort=committerdate | tail -1);
          echo $tag;
          echo ::set-env name=IMAGE_TAG_ENV::${GITHUB_REF/refs\/tags\//};
          echo ::set-env name=IMAGE_TAG_CURLY::${tag};
      - name: Output tag
        run: |
          echo $IMAGE_TAG_ENV;
          echo $IMAGE_TAG_CURLY;
      # - name: Build docker images
      #   env:
      #     BUILD_ENVIRONMENT: prod
      #     ASPNETCORE_ENVIRONMENT: Production
      #     CAPTCHA_KEY: ${{ secrets.CAPTCHA_KEY }}
      #     ASPNET_CONFIGURATION: Release
      #     SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      #     SMTP_PORT: ${{ secrets.SMTP_PORT }}
      #     SMTP_ENABLE_SSL: ${{ secrets.SMTP_ENABLE_SSL }}
      #     SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      #     SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      #     LOG_MOUNT_PATH: ${{ secrets.LOG_MOUNT_PATH }}
      #     LOCAL_WEB_PORT: 8080
      #     LOCAL_API_PORT: 8181
      #     ERROR_EMAIL_FROM: ${{ secrets.ERROR_EMAIL_FROM }}
      #     ERROR_EMAIL_TO: ${{ secrets.ERROR_EMAIL_TO }}
      #     CONTACT_EMAIL_TO: ${{ secrets.CONTACT_EMAIL_TO }}
      #   run: docker-compose build --parallel

